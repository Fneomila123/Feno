def function_h(a,b):
  x=log(abs(a))
   y=log(abs(b))
   m=max(x,y)
  return m
  
 def f(t):
  return t^3-t
C= 2*3*5*7*11*13*17*19
for d in range(1,1000):
  if Integer(d).is_squarefree():
    T=[]
      for u in range(1,100) :
         for v in range(1,100) :
             if ((u-v)>0) and (u!=0) and (v!=0) and (gcd(u,v)==1):
                h=function_h(u,v)
                if h<=C:
                   l=squarefree_part(u)*squarefree_part(v)*squarefree_part(u+v)*squarefree_part(u-v)
                if l==d:
                   t=float(u)/float(v)
                     T.append(t)
       if len(T)!=0:
          print(d, len(T),t)
          E = EllipticCurve([-d*d,0])
          show(E)
          E.rank(only_use_mwrank=False)
